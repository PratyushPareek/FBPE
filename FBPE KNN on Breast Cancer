{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3040,"status":"ok","timestamp":1652199043636,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"},"user_tz":-330},"id":"aAqVOUhZm8C2","outputId":"bcb42c0b-2088-43f0-f03e-9d6b93b28b81"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting ipython-autotime\n","  Downloading ipython_autotime-0.3.1-py2.py3-none-any.whl (6.8 kB)\n","Requirement already satisfied: ipython in /usr/local/lib/python3.7/dist-packages (from ipython-autotime) (5.5.0)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (2.6.1)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (4.4.2)\n","Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (0.8.1)\n","Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (5.1.1)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (57.4.0)\n","Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (4.8.0)\n","Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (1.0.18)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython->ipython-autotime) (0.7.5)\n","Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython->ipython-autotime) (1.15.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython->ipython-autotime) (0.2.5)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect->ipython->ipython-autotime) (0.7.0)\n","Installing collected packages: ipython-autotime\n","Successfully installed ipython-autotime-0.3.1\n","time: 2.27 ms (started: 2022-05-10 16:10:23 +00:00)\n"]}],"source":["!pip install ipython-autotime\n","%load_ext autotime"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":806,"status":"ok","timestamp":1652199044426,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"},"user_tz":-330},"id":"qVrFkRon0F4K","outputId":"b6a87feb-dc1e-41a5-fa1e-6cea247863da"},"outputs":[{"output_type":"stream","name":"stdout","text":["time: 786 ms (started: 2022-05-10 16:10:23 +00:00)\n"]}],"source":["import pandas as pd \n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.decomposition import PCA\n","from sklearn.svm import SVC\n","from bisect import bisect_right\n","from sklearn import preprocessing \n","from sklearn import metrics\n","from sklearn.metrics import confusion_matrix\n","from sklearn.multiclass import OneVsRestClassifier\n","from sklearn.neighbors import BallTree\n","from sklearn.neighbors import KDTree"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":50,"status":"ok","timestamp":1652199044428,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"},"user_tz":-330},"id":"lOZvc6ow0fJw","outputId":"d6920e05-0040-4b5c-f738-5f2496f9814c"},"outputs":[{"output_type":"stream","name":"stdout","text":["(455, 30) (455,)\n","(114, 30) (114,)\n","time: 99 ms (started: 2022-05-10 16:10:24 +00:00)\n"]}],"source":["# pd_train = pd.read_csv('https://raw.githubusercontent.com/sanskar-p/fbpe-datasets/main/breast-cancer-data.csv')\n","\n","from sklearn.datasets import load_breast_cancer\n","cancer = load_breast_cancer()\n","\n","pd_train = pd.DataFrame(np.c_[cancer['data'], cancer['target']], columns= np.append(cancer['feature_names'],['target']))\n","# pd_train.replace([np.inf, -np.inf], np.nan, inplace=True)\n","\n","x = np.array(pd_train.drop(['target'], axis=1))\n","y = np.array(pd_train['target'])\n","\n","x_train = np.array(x[0:int(0.8*len(x))])\n","y_train = np.array(y[0:int(0.8*len(y))])\n","\n","x_test = np.array(x[int(0.8*len(x)):len(x)])\n","y_test = np.array(y[int(0.8*len(y)):len(y)])\n","\n","print(x_train.shape,y_train.shape)\n","print(x_test.shape,y_test.shape)"]},{"cell_type":"code","execution_count":167,"metadata":{"id":"bC_ai8tm2CkB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652200677389,"user_tz":-330,"elapsed":607,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"73fea78d-9b69-4562-f9af-0802b0e1ca89"},"outputs":[{"output_type":"stream","name":"stdout","text":["time: 1.28 ms (started: 2022-05-10 16:37:36 +00:00)\n"]}],"source":["r = 1"]},{"cell_type":"code","execution_count":168,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":879,"status":"ok","timestamp":1652200678808,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"},"user_tz":-330},"id":"1KhePwXa17G1","outputId":"db8b05e2-da25-45f8-9e67-0779863003f5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(kernel='linear')"]},"metadata":{},"execution_count":168},{"output_type":"stream","name":"stdout","text":["time: 961 ms (started: 2022-05-10 16:37:37 +00:00)\n"]}],"source":["# linear model\n","model_linear = SVC(kernel='linear')\n","model_linear.fit(x_train[0:int(r*x_train.shape[0])], y_train[0:int(r*y_train.shape[0])])"]},{"cell_type":"code","execution_count":169,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":35,"status":"ok","timestamp":1652200678810,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"},"user_tz":-330},"id":"ep_NygCL2VZA","outputId":"cfdb3cde-0ffc-40bd-dc84-0755f109112f"},"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy: 0.9385964912280702 \n","\n","[[25  1]\n"," [ 6 82]]\n","time: 6.18 ms (started: 2022-05-10 16:37:38 +00:00)\n"]}],"source":["# predict\n","y_pred = model_linear.predict(np.array(x_test))\n","\n","# accuracy\n","print(\"accuracy:\", metrics.accuracy_score(y_true=y_test, y_pred=y_pred), \"\\n\")\n","\n","# cm\n","print(metrics.confusion_matrix(y_true=y_test, y_pred=y_pred))"]},{"cell_type":"code","execution_count":170,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":650,"status":"ok","timestamp":1652200679433,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"},"user_tz":-330},"id":"4-OxE6dX20Pw","outputId":"b04c2894-1f36-4208-e765-3230aa274a12"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC()"]},"metadata":{},"execution_count":170},{"output_type":"stream","name":"stdout","text":["time: 10.9 ms (started: 2022-05-10 16:37:38 +00:00)\n"]}],"source":["# non-linear model\n","# using rbf kernel, C=1, default value of gamma\n","non_linear_model = SVC(kernel='rbf')\n","non_linear_model.fit(x_train[0:int(r*x_train.shape[0])], y_train[0:int(r*y_train.shape[0])])"]},{"cell_type":"code","execution_count":171,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":56,"status":"ok","timestamp":1652200679435,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"},"user_tz":-330},"id":"O_eT5Wog3Btd","outputId":"9dd2eb45-4593-4a76-b20b-5827475f6535"},"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy: 0.9473684210526315 \n","\n","[[23  3]\n"," [ 3 85]]\n","time: 9.16 ms (started: 2022-05-10 16:37:38 +00:00)\n"]}],"source":["# predict\n","y_pred = non_linear_model.predict(x_test)\n","\n","# accuracy\n","print(\"accuracy:\", metrics.accuracy_score(y_true=y_test, y_pred=y_pred), \"\\n\")\n","\n","# cm\n","print(metrics.confusion_matrix(y_true=y_test, y_pred=y_pred))"]},{"cell_type":"code","execution_count":172,"metadata":{"id":"TIvbXVAI3PoX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652200679436,"user_tz":-330,"elapsed":51,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"8c5081c9-bbf1-41e6-c6ba-b793014c9e30"},"outputs":[{"output_type":"stream","name":"stdout","text":["time: 119 ms (started: 2022-05-10 16:37:38 +00:00)\n"]}],"source":["def divideByClass(x,y):\n","    classes = np.unique(y)\n","    #print(classes)\n","    X = []\n","    for c in classes:\n","        X.append([])\n","\n","    for i in range(len(x)):\n","        t = -1\n","        for j in range(len(classes)):\n","            if classes[j] == y[i]:\n","                t = j\n","                break\n","\n","        X[t].append(x[i])\n","\n","    return X,classes\n","\n","def gradientsFB(points,Neigh,mn=0.01):\n","    m = len(points)\n","    n = len(points[0])\n","\n","    gradients = []\n","    for p in range(m):\n","        g = []\n","        for i in range(n):\n","            H,L = 0,0\n","            for j in range(len(Neigh[p])):\n","                if points[Neigh[p][j]][i] > points[p][i]:\n","                    H+=1\n","                else: \n","                    L+=1\n","\n","            #print(H,L)\n","            grad = abs((H-L)/max(H,L))\n","            if max(H,L) < mn*m:\n","                g.append(0)\n","            else:\n","                g.append(grad)\n","               \n","        gd = 0\n","        for i in g:\n","            gd += i**2\n","        gradients.append(gd)\n","    #print(gradients)\n","    return gradients\n","\n","\n","def FBPE_KNN_BT_Sampling(x,y,r,d=50):\n","    x = np.array(x)\n","    X,classes = divideByClass(x,y)\n","\n","    red = []\n","    for i in range(len(X)):\n","        xc = np.array(X[i])\n","        preprocessing.StandardScaler().fit(xc)\n","        ball_tree = BallTree(xc)\n","        Neigh = []\n","        print(\"Len(xc) = \",len(xc))\n","        for j in range(len(xc)):\n","            ind = np.array(ball_tree.query_radius([xc[j]], r=d))\n","            print(len(ind[0]))\n","            Neigh.append(ind[0].astype(int))\n","\n","        g = gradientsFB(xc,Neigh)\n","        gd = ((g[j],j) for j in range(len(g)))\n","        gd = sorted(gd)\n","        gd.reverse()\n","        \n","        x_ext = [xc[gd[j][1]] for j in range(int(len(g)*r))]\n","        ext = [(x_ext[j],classes[i]) for j in range(len(x_ext))]\n","        red.extend(ext)\n","\n","        print(i,len(red))\n","\n","    np.random.shuffle(red)\n","\n","    x_train_red = [red[i][0] for i in range(len(red))]\n","    y_train_red = [red[i][1] for i in range(len(red))]\n","\n","    return x_train_red, y_train_red\n","\n","def FBPE_KNN_KDT_Sampling(x,y,r,d=50):\n","    x = np.array(x)\n","    X,classes = divideByClass(x,y)\n","\n","    red = []\n","    for i in range(len(X)):\n","        xc = np.array(X[i])\n","        preprocessing.StandardScaler().fit(xc)\n","        #xc = preprocessing.normalize(xc)\n","        tree = KDTree(xc)\n","        Neigh = []\n","        for j in range(len(xc)):\n","            ind = np.array(tree.query_radius([xc[j]], r=d))\n","            Neigh.append(ind[0].astype(int))\n","\n","        g = gradientsFB(xc,Neigh)\n","        gd = ((g[j],j) for j in range(len(g)))\n","        gd = sorted(gd)\n","        gd.reverse()\n","        \n","        x_ext = [xc[gd[j][1]] for j in range(int(len(g)*r))]\n","        ext = [(x_ext[j],classes[i]) for j in range(len(x_ext))]\n","        red.extend(ext)\n","\n","        print(i,len(red))\n","\n","    np.random.shuffle(red)\n","\n","    x_train_red = [red[i][0] for i in range(len(red))]\n","    y_train_red = [red[i][1] for i in range(len(red))]\n","\n","    return x_train_red, y_train_red\n"]},{"cell_type":"code","execution_count":173,"metadata":{"id":"0MfVu-eh4u0S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652200680110,"user_tz":-330,"elapsed":717,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"e404dc55-6df9-48c9-edd2-22411e6148be"},"outputs":[{"output_type":"stream","name":"stdout","text":["Len(xc) =  186\n","1\n","2\n","1\n","1\n","1\n","5\n","4\n","4\n","6\n","3\n","4\n","4\n","1\n","2\n","2\n","4\n","2\n","3\n","1\n","4\n","1\n","1\n","1\n","2\n","1\n","2\n","5\n","2\n","1\n","2\n","1\n","4\n","4\n","7\n","1\n","7\n","6\n","2\n","2\n","3\n","6\n","4\n","6\n","1\n","5\n","1\n","3\n","4\n","1\n","4\n","2\n","1\n","6\n","2\n","1\n","1\n","1\n","2\n","6\n","7\n","4\n","2\n","5\n","3\n","6\n","4\n","1\n","2\n","2\n","5\n","4\n","3\n","1\n","4\n","1\n","1\n","1\n","3\n","6\n","1\n","1\n","3\n","2\n","2\n","1\n","1\n","1\n","2\n","1\n","1\n","2\n","2\n","1\n","1\n","5\n","3\n","1\n","4\n","2\n","4\n","5\n","1\n","2\n","1\n","5\n","1\n","1\n","6\n","5\n","2\n","1\n","1\n","8\n","6\n","2\n","1\n","3\n","5\n","4\n","2\n","1\n","3\n","2\n","2\n","1\n","2\n","6\n","1\n","9\n","2\n","3\n","1\n","2\n","2\n","5\n","3\n","2\n","2\n","1\n","2\n","4\n","1\n","2\n","1\n","2\n","2\n","2\n","2\n","1\n","2\n","1\n","2\n","2\n","3\n","2\n","2\n","1\n","1\n","4\n","1\n","3\n","3\n","2\n","1\n","1\n","3\n","1\n","2\n","2\n","2\n","2\n","1\n","1\n","4\n","3\n","3\n","1\n","4\n","1\n","2\n","5\n","2\n","4\n","1\n","1\n","2\n","0 186\n","Len(xc) =  269\n","24\n","31\n","17\n","18\n","6\n","31\n","28\n","49\n","24\n","56\n","49\n","31\n","13\n","27\n","13\n","17\n","18\n","41\n","17\n","38\n","15\n","27\n","13\n","39\n","36\n","36\n","39\n","43\n","14\n","15\n","1\n","25\n","35\n","27\n","46\n","1\n","49\n","27\n","25\n","41\n","42\n","40\n","24\n","36\n","13\n","27\n","15\n","26\n","13\n","43\n","10\n","28\n","23\n","10\n","51\n","3\n","44\n","40\n","33\n","20\n","49\n","28\n","33\n","48\n","13\n","11\n","22\n","36\n","8\n","18\n","35\n","27\n","46\n","2\n","51\n","35\n","39\n","49\n","9\n","22\n","13\n","48\n","19\n","27\n","12\n","26\n","36\n","31\n","40\n","15\n","49\n","45\n","50\n","22\n","13\n","41\n","11\n","6\n","20\n","31\n","2\n","50\n","54\n","28\n","27\n","27\n","29\n","20\n","4\n","27\n","13\n","34\n","34\n","35\n","16\n","22\n","8\n","28\n","43\n","43\n","25\n","25\n","29\n","27\n","23\n","52\n","46\n","24\n","23\n","42\n","29\n","7\n","37\n","23\n","15\n","36\n","18\n","25\n","45\n","41\n","43\n","50\n","30\n","29\n","38\n","2\n","13\n","35\n","55\n","41\n","22\n","20\n","8\n","25\n","47\n","26\n","50\n","48\n","33\n","15\n","29\n","22\n","49\n","14\n","41\n","41\n","8\n","41\n","38\n","16\n","32\n","30\n","43\n","34\n","45\n","13\n","54\n","30\n","34\n","46\n","47\n","30\n","28\n","7\n","20\n","36\n","46\n","27\n","42\n","5\n","50\n","46\n","45\n","36\n","42\n","38\n","28\n","16\n","2\n","41\n","29\n","43\n","2\n","27\n","13\n","7\n","24\n","1\n","17\n","25\n","19\n","43\n","37\n","32\n","29\n","31\n","49\n","17\n","35\n","29\n","13\n","45\n","21\n","26\n","39\n","39\n","39\n","22\n","33\n","36\n","45\n","36\n","2\n","23\n","24\n","37\n","36\n","16\n","4\n","57\n","19\n","40\n","38\n","41\n","12\n","52\n","26\n","17\n","27\n","18\n","22\n","23\n","42\n","38\n","13\n","34\n","13\n","13\n","23\n","40\n","26\n","23\n","54\n","14\n","12\n","49\n","53\n","10\n","30\n","1 455\n","time: 478 ms (started: 2022-05-10 16:37:38 +00:00)\n"]}],"source":["x_train_red, y_train_red = FBPE_KNN_BT_Sampling(x_train,y_train,r)\n","\n","# print(len(x_train_red))\n","# print(len(x_train_red[0]))\n","# print(len(y_train_red))\n"]},{"cell_type":"code","execution_count":174,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SXm_9y-y5Xob","executionInfo":{"status":"ok","timestamp":1652200680721,"user_tz":-330,"elapsed":618,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"2c46ff35-c8d1-44af-9d3d-f6f8ebdeda59"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(kernel='linear')"]},"metadata":{},"execution_count":174},{"output_type":"stream","name":"stdout","text":["time: 971 ms (started: 2022-05-10 16:37:39 +00:00)\n"]}],"source":["# linear model\n","model_linear = SVC(kernel='linear')\n","model_linear.fit(x_train_red, y_train_red)"]},{"cell_type":"code","execution_count":175,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"psIOtChH5Yax","executionInfo":{"status":"ok","timestamp":1652200680723,"user_tz":-330,"elapsed":46,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"14165fdb-105a-4352-90c8-fb6fd99e3c35"},"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy: 0.9385964912280702 \n","\n","[[25  1]\n"," [ 6 82]]\n","time: 6.64 ms (started: 2022-05-10 16:37:40 +00:00)\n"]}],"source":["# predict\n","y_pred = model_linear.predict(np.array(x_test))\n","\n","# accuracy\n","print(\"accuracy:\", metrics.accuracy_score(y_true=y_test, y_pred=y_pred), \"\\n\")\n","\n","# cm\n","print(metrics.confusion_matrix(y_true=y_test, y_pred=y_pred))"]},{"cell_type":"code","execution_count":176,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bsIZOXCP5a7E","executionInfo":{"status":"ok","timestamp":1652200680725,"user_tz":-330,"elapsed":39,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"9837f3e4-e996-4ae4-f066-89f08c45caad"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC()"]},"metadata":{},"execution_count":176},{"output_type":"stream","name":"stdout","text":["time: 15.6 ms (started: 2022-05-10 16:37:40 +00:00)\n"]}],"source":["# non-linear model\n","# using rbf kernel, C=1, default value of gamma\n","non_linear_model = SVC(kernel='rbf')\n","non_linear_model.fit(x_train_red, y_train_red)"]},{"cell_type":"code","execution_count":177,"metadata":{"id":"6PxavqmI5dlm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652200680727,"user_tz":-330,"elapsed":33,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"d3d5240c-12b7-422e-e39e-bb102b1f2650"},"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy: 0.9473684210526315 \n","\n","[[23  3]\n"," [ 3 85]]\n","time: 7.3 ms (started: 2022-05-10 16:37:40 +00:00)\n"]}],"source":["# predict1234\n","y_pred = non_linear_model.predict(x_test)\n","\n","# accuracy\n","print(\"accuracy:\", metrics.accuracy_score(y_true=y_test, y_pred=y_pred), \"\\n\")\n","\n","# cm\n","print(metrics.confusion_matrix(y_true=y_test, y_pred=y_pred))"]},{"cell_type":"code","execution_count":178,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e3aa8fd8-24a7-40d4-ba93-3c16574a285d","executionInfo":{"status":"ok","timestamp":1652200680729,"user_tz":-330,"elapsed":28,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"id":"Vf9aaHksxz_z"},"outputs":[{"output_type":"stream","name":"stdout","text":["0 186\n","1 455\n","455\n","30\n","455\n","time: 265 ms (started: 2022-05-10 16:37:40 +00:00)\n"]}],"source":["x_train_red, y_train_red = FBPE_KNN_KDT_Sampling(x_train,y_train,r)\n","\n","print(len(x_train_red))\n","print(len(x_train_red[0]))\n","print(len(y_train_red))\n"]},{"cell_type":"code","execution_count":179,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652200682198,"user_tz":-330,"elapsed":1490,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"d3263429-f95f-41e7-cd12-a961f9d4f2d1","id":"Xkfg9zK-xz_1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(kernel='linear')"]},"metadata":{},"execution_count":179},{"output_type":"stream","name":"stdout","text":["time: 953 ms (started: 2022-05-10 16:37:40 +00:00)\n"]}],"source":["# linear model\n","model_linear = SVC(kernel='linear')\n","model_linear.fit(x_train_red, y_train_red)"]},{"cell_type":"code","execution_count":180,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652200682200,"user_tz":-330,"elapsed":76,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"d6659592-f267-4126-f176-b4cb1e5d7c76","id":"qNyamqjYxz_2"},"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy: 0.9385964912280702 \n","\n","[[25  1]\n"," [ 6 82]]\n","time: 5.5 ms (started: 2022-05-10 16:37:41 +00:00)\n"]}],"source":["# predict\n","y_pred = model_linear.predict(np.array(x_test))\n","\n","# accuracy\n","print(\"accuracy:\", metrics.accuracy_score(y_true=y_test, y_pred=y_pred), \"\\n\")\n","\n","# cm\n","print(metrics.confusion_matrix(y_true=y_test, y_pred=y_pred))"]},{"cell_type":"code","execution_count":181,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652200682202,"user_tz":-330,"elapsed":70,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"50aa53da-2ab8-48e2-e405-39d1c575fbdf","id":"FIa1lTr1xz_3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC()"]},"metadata":{},"execution_count":181},{"output_type":"stream","name":"stdout","text":["time: 11.9 ms (started: 2022-05-10 16:37:41 +00:00)\n"]}],"source":["# non-linear model\n","# using rbf kernel, C=1, default value of gamma\n","non_linear_model = SVC(kernel='rbf')\n","non_linear_model.fit(x_train_red, y_train_red)"]},{"cell_type":"code","execution_count":182,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652200682204,"user_tz":-330,"elapsed":66,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"43ce394b-b58e-4e10-ec6a-e00df4dddb4c","id":"E9nIPOZ7xz_3"},"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy: 0.9473684210526315 \n","\n","[[23  3]\n"," [ 3 85]]\n","time: 12.4 ms (started: 2022-05-10 16:37:41 +00:00)\n"]}],"source":["# predict\n","y_pred = non_linear_model.predict(x_test)\n","\n","# accuracy\n","print(\"accuracy:\", metrics.accuracy_score(y_true=y_test, y_pred=y_pred), \"\\n\")\n","\n","# cm\n","print(metrics.confusion_matrix(y_true=y_test, y_pred=y_pred))"]},{"cell_type":"code","source":["X, classes = divideByClass(x_train,y_train)\n","X_red, classes = divideByClass(x_train_red, y_train_red)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FngIzQpKHZOI","executionInfo":{"status":"ok","timestamp":1652200682206,"user_tz":-330,"elapsed":60,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"22ea08f0-42e7-4d93-cdf0-d3dbfea3fd9c"},"execution_count":183,"outputs":[{"output_type":"stream","name":"stdout","text":["time: 3.93 ms (started: 2022-05-10 16:37:41 +00:00)\n"]}]},{"cell_type":"code","execution_count":184,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"9qCaAZ0KlHXG","executionInfo":{"status":"error","timestamp":1652200682212,"user_tz":-330,"elapsed":59,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}},"outputId":"54519c20-7f88-4ea3-925d-80e63023ac2a"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-184-a846d00d167b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcolors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolor_palette\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"hls\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mclasses\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolors\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mclasses\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mpca\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mPCA\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mn_components\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mtransformed\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpca\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'sns' is not defined"]},{"output_type":"stream","name":"stdout","text":["time: 20 ms (started: 2022-05-10 16:37:41 +00:00)\n"]}],"source":["colors = np.array(sns.color_palette(\"hls\", len(classes)))\n","print(colors.shape)\n","for i in range(len(classes)):\n","    pca = PCA(n_components=2)\n","    transformed = pca.fit_transform(X[i])\n","    transformed_X = [transformed[j][0] for j in range(len(transformed))]\n","    transformed_Y = [transformed[j][1] for j in range(len(transformed))]\n","    plt.scatter(transformed_X,transformed_Y,c=colors[i])\n","plt.grid() \n","#plt.figure(figsize=(10,10))\n","#for c in classes:\n","#    plt.scatter(transformed[:,0][y_train==c], transformed[:,1][y_train==c])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ziKvuc7F6xI5","executionInfo":{"status":"aborted","timestamp":1652200682208,"user_tz":-330,"elapsed":47,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}}},"outputs":[],"source":["print(pca.explained_variance_ratio_)\n","print(transformed.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OTAMjZsl6JM4","executionInfo":{"status":"aborted","timestamp":1652200682210,"user_tz":-330,"elapsed":49,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}}},"outputs":[],"source":["print(transformed.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-LhfUSvnnTB4","executionInfo":{"status":"aborted","timestamp":1652200682211,"user_tz":-330,"elapsed":49,"user":{"displayName":"Sanskar Patro","userId":"16144140088166693399"}}},"outputs":[],"source":["print(x_train.shape)"]}],"metadata":{"colab":{"collapsed_sections":[],"name":"FBPE KNN on Breast Cancer","provenance":[{"file_id":"1HwB8IjZbk2BqkrANEf4jsJlCJVXBkhro","timestamp":1652161347818},{"file_id":"1xR4Qri5ynw6QVjEJyfe9fnOYRBxgZ1TC","timestamp":1652120324110}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}